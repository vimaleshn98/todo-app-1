pipeline{
    agent any;
     tools{
       maven 'maven'
       jdk 'JDK11'
   }
    stages{
        stage("build"){
            steps{
                sh 'mvn clean'
                sh 'mvn -f app/pom.xml compile'
            }
            post{
                success{
                    echo "========Maven compile stage executed successfully========"
                }
                failure{
                    echo "========Maven compile stage execution failed========"
                }
            }
        }
    
     stage("Test"){
            steps{
                echo "Maven Test"
                sh 'mvn -f app/pom.xml -Dmaven.test.failure.ignore=true  test'
                
            }
            post{
                success{
                    echo "========Maven Test stage executed successfully========"
                     junit 'app/target/surefire-reports/*.xml'

                }
                failure{
                    echo "========Maven Test stage execution failed========"
                     junit 'app/target/surefire-reports/*.xml'
                }
            }
        }
       stage('sonar analysis'){
            agent any
            steps{
                withSonarQubeEnv('sonarcloud'){
                    echo 'Performing SonarQube Analysis'
                    sh 'mvn -f app/pom.xml package sonar:sonar'
                }
            }
            post{
                success{
                    echo "========Code Analysis stage executed successfully========"

                }
                failure{
                    echo "========Code Analysis stage execution failed========"
                }
            }
            
        }
        
        //  stage("Quality Gate") {
        //     steps {
              
        //       timeout(time: 1, unit: 'HOURS') {
        //         script{
        //                 def qg = waitForQualityGate() 
        //                 if (qg.status != 'OK')
        //                 {
        //                     error "Pipeline failed due to gate failured "
                            
        //                  }
        //             }
        //       }
             
        //     }
        //  }  
        stage("Deployee"){
           when {
                expression {
                        currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
                steps{
     
                     rtUpload (
                         serverId: 'artifactory-server',
                     spec: '''{
                             "files": [
                                      {
                                     "pattern": "/var/lib/jenkins/workspace/TodoApp@2/app/target/*.war",
                                     "target": "art-doc-dev-locs/1"
                                    }
                                ]
                            }'''
                        )
                    }
            post{
                success{
                    echo "========Deploying executed successfully========"

                }
                
                failure{
                    echo "========Deploying stage execution failed========"
                }
            }
        }    
        stage("Download"){
           when {
                expression {
                        currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
                steps{
                     
            rtDownload (
                         serverId: 'artifactory-server',
                     spec: '''{
                             "files": [
                                      {
                                      "pattern": "art-doc-dev-locs/**",
                                      "target": "bazinga/"
                                    }
                                ]
                            }'''
                        )
                    }
            post{
                success{
                    echo "========Download executed successfully ========"
                    // sshagent(['ubuntu2']){
                    // sh 'scp -r bazinga/*.jar ubuntu@18.236.173.67:/home/ubuntu/artifacts'
                    }
                
                failure{
                    echo "========Download stage execution failed========"
                }
            }
        }
    }
    post{
        always{
            echo "========always========"
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}
